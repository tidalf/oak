# proto-file: third_party/oak/proto/attestation/expected_value.proto
# proto-message: oak.attestation.v1.ExpectedValues
#
# Expected values for fake attestation.
#
{	# (oak.attestation.v1.ExpectedValues) size=504B
  oak_containers: {	# (oak.attestation.v1.OakContainersExpectedValues) size=501B
    root_layer: {	# (oak.attestation.v1.RootLayerExpectedValues) size=2B
      insecure: {	# (oak.attestation.v1.InsecureExpectedValues) size=0B
      }	# oak_containers.root_layer.insecure
    }	# oak_containers.root_layer
    kernel_layer: {	# (oak.attestation.v1.KernelLayerExpectedValues) size=367B
      kernel: {	# (oak.attestation.v1.KernelExpectedValues) size=82B
        image: {	# (oak.attestation.v1.ExpectedDigests) size=39B
          digests: {	# (oak.attestation.v1.RawDigests) size=37B
            digests: {	# (oak.RawDigest) size=35B
              sha2_256: "\xF9\xD0XBG\xB4l\xC2\x34\xA8\x62\xAA\x8CЇe\xB3\x84\x05\x02\"S\xA7\x8B\x9A\xF1\x89\xC4\xCE\xDB\xE4G"	# size=32
            }	# oak_containers.kernel_layer.kernel.image.digests.digests[0]
          }	# oak_containers.kernel_layer.kernel.image.digests
        }	# oak_containers.kernel_layer.kernel.image
        setup_data: {	# (oak.attestation.v1.ExpectedDigests) size=39B
          digests: {	# (oak.attestation.v1.RawDigests) size=37B
            digests: {	# (oak.RawDigest) size=35B
              sha2_256: "Z\\\xD4+\x94q\xAAߖ\xDC-$\x07\xD9ܻ\x11\x65~\xEA\x1A\x0BN\x9Cr\xCF\x06#\xBB\xBA"	# size=32
            }	# oak_containers.kernel_layer.kernel.setup_data.digests.digests[0]
          }	# oak_containers.kernel_layer.kernel.setup_data.digests
        }	# oak_containers.kernel_layer.kernel.setup_data
      }	# oak_containers.kernel_layer.kernel
      kernel_cmd_line_text: {	# (oak.attestation.v1.TextExpectedValue) size=157B
        string_literals: {	# (oak.attestation.v1.ExpectedStringLiterals) size=154B
          value: [ "console=ttyS0 panic=-1 earlycon=uart,io,0x3F8 brd.rd_nr=1 brd.rd_size=3072000 brd.max_part=1 ip=10.0.2.15:::255.255.255.0::eth0:off net.ifnames=0 quiet" ]	# size=151; fp64=1be7f98807c52084; fp2011=0f40e003b2aad6fc
        }	# oak_containers.kernel_layer.kernel_cmd_line_text.string_literals
      }	# oak_containers.kernel_layer.kernel_cmd_line_text
      init_ram_fs: {	# (oak.attestation.v1.ExpectedDigests) size=39B
        digests: {	# (oak.attestation.v1.RawDigests) size=37B
          digests: {	# (oak.RawDigest) size=35B
            sha2_256: "\xE2\x87\xE5h\xB5\x88\x0B\x0Eq\xF4\xDE,\xF9\xD2\x06\xB9i\x8F\xF0\xAE\x98\r\xD0\x35\xAE\x94;ԵU\x14,"	# size=32
          }	# oak_containers.kernel_layer.init_ram_fs.digests.digests[0]
        }	# oak_containers.kernel_layer.init_ram_fs.digests
      }	# oak_containers.kernel_layer.init_ram_fs
      memory_map: {	# (oak.attestation.v1.ExpectedDigests) size=39B
        digests: {	# (oak.attestation.v1.RawDigests) size=37B
          digests: {	# (oak.RawDigest) size=35B
            sha2_256: "y\xAE`S\xB1\xAF\xD9]\xB0VC\xD3gj\xF4\x9F\xA7\xEA\x30ųW\x9D\t\x0B顊\xE7\x03\x03\x08"	# size=32
          }	# oak_containers.kernel_layer.memory_map.digests.digests[0]
        }	# oak_containers.kernel_layer.memory_map.digests
      }	# oak_containers.kernel_layer.memory_map
      acpi: {	# (oak.attestation.v1.ExpectedDigests) size=39B
        digests: {	# (oak.attestation.v1.RawDigests) size=37B
          digests: {	# (oak.RawDigest) size=35B
            sha2_256: "\x14\x1FR\xE8;B3\x11\x18\xED{*\x0B\x8B\x1F\x1B\xBA\xB3\x04\xE0\x19sǚ\xD4\xCFn\x17&\x12\xD9\xF8"	# size=32
          }	# oak_containers.kernel_layer.acpi.digests.digests[0]
        }	# oak_containers.kernel_layer.acpi.digests
      }	# oak_containers.kernel_layer.acpi
    }	# oak_containers.kernel_layer
    system_layer: {	# (oak.attestation.v1.SystemLayerExpectedValues) size=41B
      system_image: {	# (oak.attestation.v1.ExpectedDigests) size=39B
        digests: {	# (oak.attestation.v1.RawDigests) size=37B
          digests: {	# (oak.RawDigest) size=35B
            sha2_256: "\x1Cv\x1F\t\x96\x15\xB1\xE1m%!$\x07p\xC0\xFB\xCF\x66;\xB9\x03\xF6?g\xE2\x01\xF4\x1C\x7F\xBA\x32\xA4"	# size=32
          }	# oak_containers.system_layer.system_image.digests.digests[0]
        }	# oak_containers.system_layer.system_image.digests
      }	# oak_containers.system_layer.system_image
    }	# oak_containers.system_layer
    container_layer: {	# (oak.attestation.v1.ContainerLayerExpectedValues) size=82B
      bundle: {	# (oak.attestation.v1.ExpectedDigests) size=39B
        digests: {	# (oak.attestation.v1.RawDigests) size=37B
          digests: {	# (oak.RawDigest) size=35B
            sha2_256: "\xF2\xF9\xCF\xE4\xB9\f\f,(vg\x92\x0Bv\x0F\x84{n\xE0?=\xCFo\xED\xA8\x41\x9C`?{\tS"	# size=32
          }	# oak_containers.container_layer.bundle.digests.digests[0]
        }	# oak_containers.container_layer.bundle.digests
      }	# oak_containers.container_layer.bundle
      config: {	# (oak.attestation.v1.ExpectedDigests) size=39B
        digests: {	# (oak.attestation.v1.RawDigests) size=37B
          digests: {	# (oak.RawDigest) size=35B
            sha2_256: "\x1B޲\x8B\xC4\xF2\x10ۛB\xA2\x31`\xF8\x17\xC7\x05\xEF\xF9\x88\xDCg\xC2\xE2\xE8\xEEO\x8E\xE5\x93Rz"	# size=32
          }	# oak_containers.container_layer.config.digests.digests[0]
        }	# oak_containers.container_layer.config.digests
      }	# oak_containers.container_layer.config
    }	# oak_containers.container_layer
  }	# oak_containers
}
